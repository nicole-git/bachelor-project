#parse("/velocity/layout.vm")
#@mainLayout()
<div id="exercises-vue" v-cloak>
    <v-app>
        <v-container>
            <v-form v-model="valid">
                <h1 v-if="!isAdmin"> {{ lesson.title }}</h1>
                <v-text-field v-else
                              v-model="lesson.title"
                              :rules="[v => v.length > 5 || 'Must be longer than 5 characters']"
                              box
                              label="Lesson title"
                ></v-text-field>
                <div id="lesson-content">
                    <div id="lesson-left-container">
                        <div v-if="!isAdmin" id="lesson-text"> {{lesson.text}}</div>
                        <v-text-field v-else
                                      v-model="lesson.text"
                                      :rules="[v => v.length > 50 || 'Must be longer than 50 characters']"
                                      box
                                      multi-line
                                      label="Text">
                        </v-text-field>
                        <v-select v-if="isAdmin" v-model="lesson.difficulty" :items="difficultyOptions"></v-select>
                        <v-btn v-if="isAdmin" @click="showDeleteLessonDialog = true">Delete lesson</v-btn>
                        <v-btn v-if="isAdmin" :disabled="!valid" @click="saveLesson">Save lesson</v-btn>
                        <v-layout row justify-center>
                            <v-dialog v-model="showDeleteLessonDialog" max-width="290">
                                <v-card>
                                    <v-card-title class="headline">Are you sure you want to delete this lesson?</v-card-title>
                                    <v-card-text>This will permanently delete the lesson from the database.</v-card-text>
                                    <v-card-actions>
                                        <v-spacer></v-spacer>
                                        <v-btn color="green darken-4" flat="flat" @click.native="showDeleteLessonDialog = false">No</v-btn>
                                        <v-btn color="red  darken-4" flat="flat" @click.native="deleteLesson">Yes</v-btn>
                                    </v-card-actions>
                                </v-card>
                            </v-dialog>
                        </v-layout>
                    </div>
                    <div id="lesson-right-container">
                        <ul id="exercise-list" class="block-list">
                            <li v-for="exercise in exercises" class="block">
                                <a :href="exerciseUrl(exercise)">
                                    <div class="block__title"> {{ exercise.title }}
                                        <small v-if="exercise.solved">(solved)</small>
                                    </div>
                                    <div class="block__description"> {{ exercise.description }}</div>
                                </a>
                            </li>
                        </ul>
                        <v-btn v-if="isAdmin" @click="addExercise" id="addExercise">Add exercise</v-btn>
                    </div>
                </div>
            </v-form>
            <v-snackbar :timeout="3000" v-model="showSnackbar">
                {{ snackbarText }}
                <v-btn dark flat @click.native="showSnackbar = false">Close</v-btn>
            </v-snackbar>
        </v-container>
    </v-app>
</div>
<script>
    new Vue({
        el: '#exercises-vue',
        data: {
            showSnackbar: false,
            snackbarText: "",
            valid: false,
            difficultyOptions: [
                "BEGINNER",
                "INTERMEDIATE",
                "ADVANCED"
            ],
            lesson: {
                difficulty: "",
                title: "",
                text: "",
            },
            exercises: [],
            isAdmin: false,
            showDeleteLessonDialog: false
        },
        methods: {
            exerciseUrl: function (exercise) {
                return this.isAdmin ? `/lessons/$lessonId/exercises/${exercise.id}` : `/exercises/${exercise.id}`;
            },
            deleteLesson: function () {
                axios.delete("/api/lessons/$lessonId").then(() => {
                    window.location = "/lessons";
                });
            },
            saveLesson: function () {
                let data = {
                    title: this.lesson.title,
                    difficulty: this.lesson.difficulty,
                    text: this.lesson.text
                };
                axios.patch("/api/lessons/$lessonId", data).then(() => {
                    this.showSnackbar = true;
                    this.snackbarText = "Lesson saved!";
                }).catch(() => {
                    this.showSnackbar = true;
                    this.snackbarText = "Failed to save lesson.";
                });
            },
            addExercise: function () {
                let blankExercise = {
                    title: "New exercise",
                    description: "Description",
                    instructions: ""
                };
                axios.post("/api/lessons/$lessonId/exercises", blankExercise).then(response => {
                    window.location = `/lessons/$lessonId/exercises/${response.data.id}`;
                });
            }
        },
        created: function () {
            axios.get("/api/lessons/$lessonId").then(response => {
                this.lesson = response.data
            });
            axios.get("/api/lessons/$lessonId/exercises").then(response => {
                this.exercises = response.data
            });
            axios.get("/api/user").then(response => {
                this.isAdmin = response.data.admin;
            });
        }
    });
</script>
#end
