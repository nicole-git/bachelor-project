#parse("/velocity/layout.vm")
#@mainLayout()
<div id="students-vue" v-cloak>
    <v-app>
        <v-container>
            <v-select v-model="selectedStudentOption" :items="studentOptions" label="Select student" autocomplete></v-select>
            <v-select v-model="selectedExerciseOption" :items="exerciseOptions" label="Select exercise" autocomplete></v-select>
            <div id="chart_div"></div>
        </v-container>
    </v-app>
</div>
<script>
    // client tells the server that it wants to GET "/api/students"
    new Vue({
        el: '#students-vue',
        data: {
            selectedStudentOption: "All students",
            selectedExerciseOption: "All exercises",
            students: [],
            exercises: []
        },
        computed: {
            studentOptions: function() {
                return ["All students"].concat(this.students.map(student => student.userId));
            },
            exerciseOptions: function () {
                return ["All exercises"].concat(this.exercises.map(exercise => exercise.exerciseId));
            }
        },
        watch: {
            selectedStudentOption: function (newOption) {
                getDataAndDrawGraph(newOption)
            },
            selectedExerciseOption: function (newOption) {
                getDataAndDrawGraph(newOption)
            }
        },
        created: function () {
            axios.get("/api/statistics/students").then(response => {
                this.students = this.students.concat(response.data);
            });
            axios.get("/api/statistics/exercises").then(response => {
                this.exercises = this.exercises.concat(response.data);
            });
        }
    });

    getDataAndDrawGraph("All students");

    function getDataAndDrawGraph(option) {
        var path = option === "All students" ? "/api/statistics/exercises" : "/api/statistics/students/" + option;
        axios.get(path).then(function (response) {
            var graphData = [];
            graphData.push(["Exercise", "Total Attempts"]);
            response.data.forEach(function (element) {
                graphData.push([element.exerciseId, element.totalAttempts]);
            });
            google.charts.load('current', {packages: ['corechart', 'bar']});
            google.charts.setOnLoadCallback(() => drawChart(graphData));
        });
    }

    function drawChart(graphData) {
        var data = google.visualization.arrayToDataTable(graphData);
        var options = {
            title: "Number of attempts per exercise",
            width: "100%",
            height: 400,
            bar: {groupWidth: '95%'},
            legend: {position: 'none'},
        };
        var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        chart.draw(data, options);
    }

</script>
#end
